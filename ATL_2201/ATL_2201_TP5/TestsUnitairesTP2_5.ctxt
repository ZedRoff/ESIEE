#BlueJ class context
comment0.target=TestsUnitairesTP2_5
comment0.text=\r\n\ The\ test\ class\ TestsUnitairesTP2_5.\r\n\r\n\ @author\ \ Benjamin\ Perret\ &\ Romain\ Negrel\r\n\ @version\ 2023/2024\r\n
comment1.params=
comment1.target=void\ setUp()
comment10.params=
comment10.target=void\ ProduitVectoriel()
comment11.params=
comment11.target=void\ EstOrthogonal()
comment12.params=
comment12.target=void\ EstColineaire()
comment13.params=
comment13.target=void\ EstCoplanaire3d()
comment14.params=
comment14.target=void\ ClasseMatrice()
comment15.params=
comment15.target=void\ GetVecteurLigne()
comment16.params=
comment16.target=void\ MutiplicationVectorielle()
comment17.params=
comment17.target=void\ Identite()
comment18.params=
comment18.target=void\ SetHomothetie()
comment19.params=
comment19.target=void\ SetSymetrieCentrale()
comment2.params=
comment2.target=void\ tearDown()
comment20.params=
comment20.target=void\ SetReflexionOx()
comment21.params=
comment21.target=void\ SetReflexionOxOy()
comment22.params=
comment22.target=void\ SetRotation2d()
comment23.params=
comment23.target=void\ SetRotation3dOx()
comment24.params=
comment24.target=void\ GetVecteurColonne()
comment25.params=
comment25.target=void\ ProduitMatriciel()
comment26.params=
comment26.target=void\ NormaliseHomogene()
comment27.params=
comment27.target=void\ SetHomothetieHomogene3d()
comment28.params=
comment28.target=void\ SetTranslationHomogene3d()
comment29.params=
comment29.target=void\ SetRotationOxHomogene3d()
comment3.params=
comment3.target=void\ ClasseVecteur()
comment30.params=
comment30.target=void\ SetRotationOyHomogene3d()
comment31.params=
comment31.target=void\ SetRotationOzHomogene3d()
comment32.params=
comment32.target=void\ SetProjectionOrthoOxyHomogene3d()
comment33.params=
comment33.target=void\ SetProjectionOrthoOxzHomogene3d()
comment34.params=
comment34.target=void\ SetProjectionOrthoOyzHomogene3d()
comment35.params=
comment35.target=void\ SetProjectionPerspectiveOxyHomogene3d()
comment36.params=op
comment36.target=double\ helpNrm(double[])
comment37.params=op\ op1
comment37.target=double[]\ helpMV(double[][],\ double[])
comment38.params=c\ mName\ returnType\ refs\ inArgs\ expectedResults\ inplace\ argTypes
comment38.target=void\ testMethod(java.lang.Class,\ java.lang.String,\ java.lang.Class,\ java.lang.Object[],\ java.lang.Object[][],\ java.lang.Object[],\ boolean,\ java.lang.Class[])
comment39.params=c\ mName\ returnType\ args
comment39.target=java.lang.reflect.Method\ getMethod(java.lang.Class,\ java.lang.String,\ java.lang.Class,\ java.lang.Class[])
comment4.params=
comment4.target=void\ Dessiner()
comment40.params=m\ returnType
comment40.target=void\ checkProto(java.lang.reflect.Method,\ java.lang.Class)
comment41.params=t1\ t2
comment41.target=boolean\ isEqual(double[][],\ double[][])
comment42.params=t1\ t2
comment42.target=boolean\ isEqual(double[],\ double[])
comment43.params=d1\ d2
comment43.target=boolean\ isEqual(double,\ double)
comment44.params=size
comment44.target=double[]\ randomTab(int)
comment45.params=l\ c
comment45.target=double[][]\ randomTab(int,\ int)
comment46.params=m\ ref\ args
comment46.target=java.lang.Object\ invoke(java.lang.reflect.Method,\ java.lang.Object,\ java.lang.Object[])
comment5.params=
comment5.target=void\ MultiplicationScalaire()
comment6.params=
comment6.target=void\ Norme()
comment7.params=
comment7.target=void\ Normalisation()
comment8.params=
comment8.target=void\ SommeVectorielle()
comment9.params=
comment9.target=void\ ProduitScalaire()
numComments=47
